const { SlashCommandBuilder } = require('discord.js');
const axios = require('axios');
const { JSDOM } = require('jsdom'); // You'll need to install this package

module.exports = {
  data: new SlashCommandBuilder()
    .setName('vuotlink')
    .setDescription('Bypass li√™n k·∫øt Yeumoney')
    .addStringOption(option =>
      option.setName('url')
        .setDescription('Nh·∫≠p URL c·∫ßn bypass')
        .setRequired(true)
    )
    .addBooleanOption(option =>
      option.setName('auto')
        .setDescription('T·ª± ƒë·ªông chuy·ªÉn trang')
        .setRequired(false)
    ),

  async execute(interaction) {
    await interaction.deferReply({ ephemeral: true });
    const url = interaction.options.getString('url');
    const autoRedirect = interaction.options.getBoolean('auto') || false;
    
    try {
      // Th√¥ng b√°o ƒëang x·ª≠ l√Ω
      await interaction.editReply('‚öôÔ∏è ƒêang x·ª≠ l√Ω URL...');
      
      // Kh·ªüi t·∫°o bypass
      const codexn = await getCodexn();
      if (!codexn) {
        return interaction.editReply('‚ùå Kh√¥ng th·ªÉ l·∫•y m√£ codexn. Vui l√≤ng th·ª≠ l·∫°i sau.');
      }
      
      // Chu·∫©n h√≥a URL
      const cleanUrl = url.replace(/\/$/, '');
      
      // L·∫•y m√£ x√°c th·ª±c ƒë·∫ßu ti√™n
      const firstVerificationCode = await getVerificationCode(codexn, cleanUrl, 'https://www.google.com/', null);
      if (!firstVerificationCode) {
        return interaction.editReply('‚ùå Kh√¥ng th·ªÉ l·∫•y m√£ x√°c th·ª±c ƒë·∫ßu ti√™n. URL c√≥ th·ªÉ kh√¥ng h·ª£p l·ªá.');
      }
      
      // L·∫•y m√£ codexn m·ªõi
      const newCodexn = await getCodexn(firstVerificationCode);
      if (!newCodexn) {
        return interaction.editReply('‚ùå Kh√¥ng th·ªÉ l·∫•y m√£ codexn m·ªõi. Vui l√≤ng th·ª≠ l·∫°i sau.');
      }
      
      // L·∫•y m√£ x√°c th·ª±c cu·ªëi c√πng
      const adminUrl = cleanUrl + '/admin';
      const finalCode = await getVerificationCode(newCodexn, adminUrl, cleanUrl, firstVerificationCode);
      if (!finalCode) {
        return interaction.editReply('‚ùå Kh√¥ng th·ªÉ l·∫•y m√£ x√°c th·ª±c cu·ªëi c√πng. Vui l√≤ng th·ª≠ l·∫°i.');
      }
      
      // T·∫°o k·∫øt qu·∫£ bypass
      const directUrl = autoRedirect ? 
        `https://yeumoney.com/gt.php?code=${finalCode}` : 
        null;
      
      // G·ª≠i k·∫øt qu·∫£
      if (directUrl) {
        await interaction.editReply({
          content: `‚úÖ ƒê√£ bypass th√†nh c√¥ng!\n\nüîë **M√£ code**: \`${finalCode}\`\nüîó **Link tr·ª±c ti·∫øp**: ${directUrl}`,
          components: [
            {
              type: 1,
              components: [
                {
                  type: 2,
                  style: 5,
                  label: 'M·ªü Link',
                  url: directUrl
                }
              ]
            }
          ]
        });
      } else {
        await interaction.editReply({
          content: `‚úÖ ƒê√£ bypass th√†nh c√¥ng!\n\nüîë **M√£ code**: \`${finalCode}\`\n\n(S·ª≠ d·ª•ng m√£ n√†y v·ªõi form submit t·∫°i yeumoney.com)`
        });
      }
    } catch (error) {
      console.error('L·ªói khi bypass:', error);
      await interaction.editReply('‚ùå ƒê√£ x·∫£y ra l·ªói khi bypass link. Vui l√≤ng ki·ªÉm tra l·∫°i URL v√† th·ª≠ l·∫°i sau.');
    }
  }
};

// H√†m ƒë·ªÉ l·∫•y m√£ codexn
async function getCodexn(clk = null) {
  try {
    const timestamp = Date.now();
    const referrer = 'https://www.google.com/';
    const data = `${timestamp},${referrer},,IOS900,hidden,null`;
    
    const url = `https://traffic-user.net/GET_VUATRAFFIC.php?data=${data}${clk ? '&clk=' + clk : ''}`;
    
    const response = await axios.post(url, {}, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
        'Referer': 'https://yeumoney.com/'
      }
    });
    
    const match = response.data.match(/localStorage\.codexn\s*=\s*'([^']+)'/);
    if (match && match[1]) {
      return match[1];
    }
    
    throw new Error('Kh√¥ng th·ªÉ l·∫•y m√£ codexn');
  } catch (error) {
    console.error('L·ªói khi l·∫•y codexn:', error);
    return null;
  }
}

// H√†m ƒë·ªÉ l·∫•y m√£ x√°c th·ª±c - ƒë√£ s·ª≠a ƒë·ªÉ kh√¥ng s·ª≠ d·ª•ng DOMParser
async function getVerificationCode(codexn, url, referrer, clk = null) {
  try {
    const apiUrl = `https://traffic-user.net/GET_MA.php?codexn=${codexn}&url=${url}&loai_traffic=${referrer}${clk ? '&clk=' + clk : ''}`;
    
    const response = await axios.post(apiUrl, {}, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
        'Referer': 'https://yeumoney.com/'
      }
    });
    
    // Ki·ªÉm tra m√£ x√°c th·ª±c trong ph·∫£n h·ªìi
    const clickMatch = response.data.match(/sessionStorage\.setItem\("ymnclk", (\d+)\)/);
    if (clickMatch && clickMatch[1]) {
      return clickMatch[1];
    }
    
    // S·ª≠ d·ª•ng JSDOM thay cho DOMParser
    const { window } = new JSDOM(response.data);
    const codeElement = window.document.querySelector('span#layma_me_vuatraffic');
    
    if (codeElement) {
      return codeElement.textContent.trim();
    }
    
    // N·∫øu kh√¥ng t√¨m th·∫•y qua DOM, th·ª≠ d√πng regex
    const codeMatch = response.data.match(/<span id="layma_me_vuatraffic"[^>]*>([^<]+)<\/span>/);
    if (codeMatch && codeMatch[1]) {
      return codeMatch[1].trim();
    }
    
    throw new Error('Kh√¥ng th·ªÉ l·∫•y m√£ x√°c th·ª±c');
  } catch (error) {
    console.error('L·ªói khi l·∫•y m√£ x√°c th·ª±c:', error);
    return null;
  }
}
